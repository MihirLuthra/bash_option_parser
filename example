#! /usr/bin/env bash

source ./option_parser

readonly PROG_NAME="$(basename "$BASH_SOURCE")"

test_parser() {
	local last_arg
	local error_code

	parse_options \
		'command'                              '1 1 ...' \
		'-m'        , '--make'   , '--create'  '0'       \
		'-s'        , '--search' , '--find'    '1 1 -1'  \
		'-v'        , '--var-args'             '1 ...'   \
		'suboption' , 'subopt'                 'S'       \
		';' \
		"$@"

	error_code=$?
	echo "retval = $error_code"

	if [ $error_code -ne 0 ]; then
		option_parser_error_msg "$error_code"
		print_usage 'command'
		exit 1
	fi

	for key in "${!OPTIONS[@]}"; do
		echo "OPTION --> $key"
		if [ -n "${ARG_CNT[$key]}" ] ;then
			echo "ARGS ----> $key:"
			last_arg="$( expr ${ARG_CNT[$key]} - 1 )"
			for pos in $( seq 0 $last_arg ) ;do
				echo "ARG[$key][$pos] -------> ${ARGS[$key,$pos]}"
			done
		fi
	done

	#
	# Now parsing suboption
	#

	local shift_cnt=${OPTIONS[suboption]}

	if [ -z "$shift_cnt" ]
	then
		return 0
	fi

	parse_options_detailed \
		',' 'OPTIONS_S' 'ARG_CNT_S' 'ARGS_S' "$shift_cnt" ';' '--' 'error_opt' \
		'OPTION_DATA_S' 'ALIAS_DATA_S' \
		                           \
		'suboption'       '1 -1'   \
		'-a'  , '--apple' '0'      \
		'-l'  , '--linux' '1 1 -1' \
		'-u'  , '--unix'  '1 ...'  \
		                           \
		';' \
		"$@"

	error_code=$?

	printf "\nsuboption now:\n\n"

	echo "retval = $error_code"

	if [ $error_code -ne 0 ]; then
		option_parser_error_msg_detailed "$error_code" 'OPTIONS_S' 'ARG_CNT_S' 'ARGS_S' 'error_opt'
		print_usage_detailed 'suboption' 'OPTION_DATA_S' 'ALIAS_DATA_S'
	fi

	for key in "${!OPTIONS_S[@]}"; do
		echo "OPTION_S --> $key"
		if [ -n "${ARG_CNT_S[$key]}" ] ;then
			echo "ARGS_S ----> $key:"
			last_arg="$( expr ${ARG_CNT_S[$key]} - 1 )"
			for pos in $( seq 0 $last_arg ) ;do
				echo "ARG[$key][$pos] -------> ${ARGS_S[$key,$pos]}"
			done
		fi
	done
}

test_parser "$@"
